name: Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
jobs:
  build-grcov:
    name: "Build grcov"
    runs-on: ubuntu-latest
    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          key: grcov
          path: ~/.cargo/bin/grcov
      - name: Install Rust toolchain
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: dtolnay/rust-toolchain@stable
      - name: Build
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: cargo install grcov
  test:
    needs: build-grcov
    name: "Test Rust ${{ matrix.rust-toolchain }}, features ${{ matrix.features }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain: ["stable", "beta"]
        features: [""]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: llvm-tools-preview
      - name: Test
        run: cargo test --all --features '${{ matrix.features }}'
        env:
          RUSTFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "report-%p-%m.profraw"
      - name: Get cached grcov
        uses: actions/cache@v4
        with:
          key: grcov
          path: ~/.cargo/bin/grcov
      - name: Test
        run: env
      - name: Name of coverage file (part 1)
        run: echo cov_id='${{ matrix.rust-toolchain }}' >> $GITHUB_ENV
      - name: Name of coverage file (part 2)
        if: ${{ matrix.features }}
        run: echo cov_id="$cov_id"-'${{ matrix.features }}' >> $GITHUB_ENV
      - name: Convert coverage
        run: |
          mkdir -p target/coverage
          grcov . --binary-path target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o "target/coverage/$cov_id.lcov"
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: target/coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
  check-fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Check code formatting
        run: cargo fmt --all --check
